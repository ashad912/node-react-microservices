NATS Streaming Server

docs.nats.importing

NATS and NATS Streaming Server are different things - NATS SS is more advanced, built on the top NATS

NATS Streaming implements some extraordinary import design decisions that will affect out app

We going to run the official 'nats-streaming' docker image in k8s. Need to read the image's docs

---

Using args in build image command from 'depl' file [[name_of_arg], [value]]

---

We will use node-nats-streaming as event bus provider

Sub-pub pattern here in communication

List of All Events Ever Emitted case?
->
in NATS it is stored in memory on in SQL (mySQL/Postgres)

---

Going to setup workaround project related to node-nats-streaming

---

Project created

---

Remember - due to hooks or middleware, value in request may be changed during saving to db ->
-> focus on usage the last of value reference

--- 

How to share NATS client between files? (DI hehe!)
Create custom file

---

clusterId -> -cid in .yml service params

singleton -> means export one instance of class/factory as dep to other modules

---

Deleting nats pod to see process.on() on close actions

---

awaiting awaiting... how long? user is waiting for response!!

does user care about event emitting? it depends on business logic

saving events in db for faster response, and transaction/event consistency

To make sure that our event and transaction are both saved in db we can use builtin Transaction (provides rollback etc.)
-> Mongoose can do it 

Not going to implement it in scope of the course :<

---

Handle NATS inside test

- test environment
- mocking

<- using jest.fn().mockImplementation()
---

Using NATS env by K8s

falueFrom -> fieldRef -> fieldPath -> metadata.name
looks at name of pod, guaranteea unique id

---

To refresh VSC:
Crtl+Shift+P -> Developer: Reload Window 

---

To prevent type checking:
// @ts-nocheck

