// Container lifecycle

// docker run = docker create + docker start
// -a - give my any output from terminal!
// docker start is not going to show u info from terminal by default

// Docker rerun:
// docker start <id>

// Cannot overwrite command in created container

// docker system prune - remove a lot of things (containers, cache)

// Forgot -a option when docker start
// User docker logs <id> to see the outputed logs

// docker stop <id> -> SIGTERM message (has 10s to perform, after that sends SIGKILL)
// docker kill <id> -> SIGKILL message

// docker run redis worked from t-mobile network, not from nju!
// Problem with dns?

// redis-server is woring only in container
// To run redis-cli u need to do it in container!

// docker exec -it <container id> <command>

// -it - allow us to provide input to the container
// Without -it we are kicked out to the terminal

// Linux communication channels for process:
// STDIN - input to process
// STDOUT - output from process
// STDERR - error output
// -it = -i -t
// -i - connect terminal to STDIN
// -t - better formatting

// docker exec -it 7ad96e1904d6 sh
// sh - provides possibility to execute linux commands
// sh = Shell - command processor executed inside container

// docker run -it busybox sh <- Run new container with busybox image, and run Shell
// Can only run one process in that Shell

// Containers do not share filesystem be default